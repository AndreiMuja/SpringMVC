/*
 * This file is generated by jOOQ.
 */
package org.jooq.test;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.test.tables.Planets;
import org.jooq.test.tables.records.PlanetsRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>space_info</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<PlanetsRecord, Integer> IDENTITY_PLANETS = Identities0.IDENTITY_PLANETS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PlanetsRecord> KEY_PLANETS_PRIMARY = UniqueKeys0.KEY_PLANETS_PRIMARY;
    public static final UniqueKey<PlanetsRecord> KEY_PLANETS_PLANET_NAME_UNIQUE = UniqueKeys0.KEY_PLANETS_PLANET_NAME_UNIQUE;
    public static final UniqueKey<PlanetsRecord> KEY_PLANETS_IAU_PATTERN_UNIQUE = UniqueKeys0.KEY_PLANETS_IAU_PATTERN_UNIQUE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<PlanetsRecord, Integer> IDENTITY_PLANETS = Internal.createIdentity(Planets.PLANETS, Planets.PLANETS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<PlanetsRecord> KEY_PLANETS_PRIMARY = Internal.createUniqueKey(Planets.PLANETS, "KEY_planets_PRIMARY", Planets.PLANETS.ID);
        public static final UniqueKey<PlanetsRecord> KEY_PLANETS_PLANET_NAME_UNIQUE = Internal.createUniqueKey(Planets.PLANETS, "KEY_planets_planet_name_UNIQUE", Planets.PLANETS.PLANET_NAME);
        public static final UniqueKey<PlanetsRecord> KEY_PLANETS_IAU_PATTERN_UNIQUE = Internal.createUniqueKey(Planets.PLANETS, "KEY_planets_iau_pattern_UNIQUE", Planets.PLANETS.IAU_PATTERN);
    }
}
